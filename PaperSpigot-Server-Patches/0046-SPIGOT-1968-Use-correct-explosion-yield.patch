From 9683a8b843272da8f3f4a31230a69e93f465f004 Mon Sep 17 00:00:00 2001
From: SotrForgotten <i@omc.hk>
Date: Thu, 28 Jul 2016 00:18:00 +0800
Subject: [PATCH] SPIGOT-1968: Use correct explosion yield


diff --git a/src/main/java/net/minecraft/server/ChunkProviderServer.java b/src/main/java/net/minecraft/server/ChunkProviderServer.java
index 28fd530..8366843 100644
--- a/src/main/java/net/minecraft/server/ChunkProviderServer.java
+++ b/src/main/java/net/minecraft/server/ChunkProviderServer.java
@@ -113,14 +113,14 @@ public class ChunkProviderServer implements IChunkProvider {
     }
 
     // CraftBukkit start - Add async variant, provide compatibility
+    public Chunk getChunkIfLoaded(int x, int z) {
+        return chunks.get(LongHash.toLong(x, z));
+    }
+	
 	public Chunk getOrCreateChunkFast(int x, int z) {
         Chunk chunk = chunks.get(LongHash.toLong(x, z));
         return (chunk == null) ? getChunkAt(x, z) : chunk;
     }
-	
-    public Chunk getChunkIfLoaded(int x, int z) {
-        return chunks.get(LongHash.toLong(x, z));
-    }
 
     public Chunk getChunkAt(int i, int j) {
         return getChunkAt(i, j, null);
@@ -154,10 +154,10 @@ public class ChunkProviderServer implements IChunkProvider {
 
         return chunk;
     }
+	
     public Chunk originalGetChunkAt(int i, int j) {
 		long hash = LongHash.toLong(i, j);
         this.unloadQueue.remove(hash); // TacoSpigot - directly invoke LongHash
-        Chunk chunk = this.chunks.get(hash);
         Chunk chunk = (Chunk) this.chunks.get(hash);
         boolean newChunk = false;
         // CraftBukkit end
@@ -222,6 +222,9 @@ public class ChunkProviderServer implements IChunkProvider {
     }
 
     public Chunk getOrCreateChunk(int i, int j) {
+		return getOrCreateChunkFast(i, j);
+		
+		/*
         // CraftBukkit start
         Chunk chunk = (Chunk) this.chunks.get(LongHash.toLong(i, j));
 
@@ -238,6 +241,7 @@ public class ChunkProviderServer implements IChunkProvider {
 
         return chunk;
         // CraftBukkit end
+		*/
     }
 
     public Chunk loadChunk(int i, int j) {
diff --git a/src/main/java/net/minecraft/server/DedicatedServer.java b/src/main/java/net/minecraft/server/DedicatedServer.java
index 211c090..6f97154 100644
--- a/src/main/java/net/minecraft/server/DedicatedServer.java
+++ b/src/main/java/net/minecraft/server/DedicatedServer.java
@@ -294,16 +294,16 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                 }
                 // CraftBukkit end
 
-        if (org.spigotmc.SpigotConfig.lateBind) {
-            try {
-                this.aq().a(inetaddress, this.R());
-            } catch (IOException ioexception) {
-                DedicatedServer.LOGGER.warn("**** FAILED TO BIND TO PORT!");
-                DedicatedServer.LOGGER.warn("The exception was: {}", new Object[] { ioexception.toString()});
-                DedicatedServer.LOGGER.warn("Perhaps a server is already running on that port?");
-                return false;
-            }
-        }
+				if (org.spigotmc.SpigotConfig.lateBind) {
+					try {
+						this.aq().a(inetaddress, this.R());
+					} catch (IOException ioexception) {
+						DedicatedServer.LOGGER.warn("**** FAILED TO BIND TO PORT!");
+						DedicatedServer.LOGGER.warn("The exception was: {}", new Object[] { ioexception.toString()});
+						DedicatedServer.LOGGER.warn("Perhaps a server is already running on that port?");
+						return false;
+					}
+				}
 
                 if (false && this.aS() > 0L) {  // Spigot - disable
                     Thread thread1 = new Thread(new ThreadWatchdog(this));
@@ -313,11 +313,10 @@ public class DedicatedServer extends MinecraftServer implements IMinecraftServer
                     thread1.start();
                 }
 
+				ImmutableArrayMap.deployed = true; // Torch
                 return true;
             }
         }
-		
-		ImmutableArrayMap.deployed = true; // Torch
     }
 
     // CraftBukkit start
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index 20c8524..b82b984 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -846,9 +846,7 @@ public abstract class EntityInsentient extends EntityLiving {
             this.bo = false;
             this.bp = null;
             if (!this.world.isClientSide && flag1) {
-				this.forceDrops = true; // CraftBukkit
                 this.a(Items.LEAD, 1);
-				this.forceDrops = false; // CraftBukkit
             }
 
             if (!this.world.isClientSide && flag && this.world instanceof WorldServer) {
diff --git a/src/main/java/net/minecraft/server/Explosion.java b/src/main/java/net/minecraft/server/Explosion.java
index b7d410e..d0edb85 100644
--- a/src/main/java/net/minecraft/server/Explosion.java
+++ b/src/main/java/net/minecraft/server/Explosion.java
@@ -197,13 +197,13 @@ public class Explosion {
             float yield;
 
             if (explode != null) {
-                EntityExplodeEvent event = new EntityExplodeEvent(explode, location, blockList, 0.3F);
+                EntityExplodeEvent event = new EntityExplodeEvent(explode, location, blockList, 1.0F / this.size);
                 this.world.getServer().getPluginManager().callEvent(event);
                 cancelled = event.isCancelled();
                 bukkitBlocks = event.blockList();
                 yield = event.getYield();
             } else {
-                BlockExplodeEvent event = new BlockExplodeEvent(location.getBlock(), blockList, 0.3F);
+                BlockExplodeEvent event = new BlockExplodeEvent(location.getBlock(), blockList, 1.0F / this.size);
                 this.world.getServer().getPluginManager().callEvent(event);
                 cancelled = event.isCancelled();
                 bukkitBlocks = event.blockList();
diff --git a/src/main/java/net/minecraft/server/IChunkProvider.java b/src/main/java/net/minecraft/server/IChunkProvider.java
index 07b7216..c68ffe0 100644
--- a/src/main/java/net/minecraft/server/IChunkProvider.java
+++ b/src/main/java/net/minecraft/server/IChunkProvider.java
@@ -21,8 +21,6 @@ public interface IChunkProvider {
     boolean canSave();
 
     String getName();
-	
-	Chunk getOrCreateChunkFast(int x, int z); // CraftBukkit
 
     List<BiomeBase.BiomeMeta> getMobsFor(EnumCreatureType enumcreaturetype, BlockPosition blockposition);
 
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index e825196..96b04f9 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -226,8 +226,6 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                     }
                 }
                 // CraftBukkit start - fire PlayerMoveEvent
-				// Rest to old location first
-                this.player.setLocation(prevX, prevY, prevZ, prevYaw, prevPitch);
 				
                 Player player = this.getPlayer();
                 // Spigot Start
@@ -430,14 +428,6 @@ public class PlayerConnection implements PacketListenerPlayIn, IUpdatePlayerList
                         flag1 = true;
                         PlayerConnection.c.warn(this.player.getName() + " moved wrongly!");
                     }
-					
-					// CraftBukkit - Make sure the move is valid but then reset it for plugins to modify
-                        double prevX = player.locX;
-                        double prevY = player.locY;
-                        double prevZ = player.locZ;
-                        float prevYaw = player.yaw;
-                        float prevPitch = player.pitch;
-                    // CraftBukkit end
 
                     this.player.setLocation(d7, d8, d9, f2, f3);
                     this.player.checkMovement(this.player.locX - d0, this.player.locY - d1, this.player.locZ - d2);
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index beee5ac..177ba3e 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -618,7 +618,6 @@ public abstract class PlayerList {
         entityplayer1.playerConnection.sendPacket(new PacketPlayOutSpawnPosition(blockposition1));
         entityplayer1.playerConnection.sendPacket(new PacketPlayOutExperience(entityplayer1.exp, entityplayer1.expTotal, entityplayer1.expLevel));
         this.b(entityplayer1, worldserver);
-		this.f(entityplayer1);
 
         if (!entityplayer.playerConnection.isDisconnected()) {
             worldserver.getPlayerChunkMap().addPlayer(entityplayer1);
@@ -627,8 +626,7 @@ public abstract class PlayerList {
             this.playersByName.put(entityplayer1.getName(), entityplayer1); // Spigot
             this.j.put(entityplayer1.getUniqueID(), entityplayer1);
         }
-		// entityplayer1.syncInventory();
-        entityplayer1.setHealth(entityplayer1.getHealth());
+
         // Added from changeDimension
         updateClient(entityplayer); // Update health, etc...
         entityplayer.updateAbilities();
@@ -637,6 +635,7 @@ public abstract class PlayerList {
             entityplayer.playerConnection.sendPacket(new PacketPlayOutEntityEffect(entityplayer.getId(), mobEffect));
         }
 
+		entityplayer1.setHealth(entityplayer1.getHealth());
         // Don't fire on respawn
         if (fromWorld != location.getWorld()) {
             PlayerChangedWorldEvent event = new PlayerChangedWorldEvent(entityplayer.getBukkitEntity(), fromWorld);
diff --git a/src/main/java/net/minecraft/server/World.java b/src/main/java/net/minecraft/server/World.java
index 11ed5e4..22e39bd 100644
--- a/src/main/java/net/minecraft/server/World.java
+++ b/src/main/java/net/minecraft/server/World.java
@@ -356,7 +356,7 @@ public abstract class World implements IBlockAccess {
     }
 
     public Chunk getChunkAt(int i, int j) {
-        return this.chunkProvider.getOrCreateChunkFast(i, j); // CraftBukkit
+        return this.chunkProvider.getOrCreateChunk(i, j);
     }
 
     public boolean setTypeAndData(BlockPosition blockposition, IBlockData iblockdata, int i) {
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftStatistic.java b/src/main/java/org/bukkit/craftbukkit/CraftStatistic.java
index f9d2e88..b6241da 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftStatistic.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftStatistic.java
@@ -112,9 +112,6 @@ public class CraftStatistic {
             if (stat == Statistic.BREAK_ITEM) {
                 return StatisticList.BREAK_ITEM_COUNT[material.getId()];
             }
-			if (stat == Statistic.DROP) {
-                return StatisticList.e(CraftMagicNumbers.getItem(material)); // PAIL: getDropItemStatistic
-            }
         } catch (ArrayIndexOutOfBoundsException e) {
             return null;
         }
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index dbda3c9..e344618 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -141,7 +141,7 @@ public class CraftWorld implements World {
     // PaperSpigot end
 
     public Chunk getChunkAt(int x, int z) {
-		return this.world.chunkProviderServer.getOrCreateChunkFast(x, z).bukkitChunk;
+		return this.world.chunkProviderServer.getOrCreateChunk(x, z).bukkitChunk;
     }
 
     public Chunk getChunkAt(Block block) {
diff --git a/src/main/java/org/bukkit/craftbukkit/block/CraftBanner.java b/src/main/java/org/bukkit/craftbukkit/block/CraftBanner.java
index f3856d9..f233b7a 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/CraftBanner.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/CraftBanner.java
@@ -96,7 +96,7 @@ public class CraftBanner extends CraftBlockState implements Banner {
 
     @Override
     public boolean update(boolean force, boolean applyPhysics) {
-        boolean result = (isPlaced()) ? super.update(force, applyPhysics) : true;
+        boolean result = super.update(force, applyPhysics);
 
         if (result) {
             banner.color = base.getDyeData();
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
index 771ff68..d103cd1 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftFirework.java
@@ -3,7 +3,6 @@ package org.bukkit.craftbukkit.entity;
 import net.minecraft.server.EntityFireworks;
 import net.minecraft.server.ItemStack;
 import net.minecraft.server.Items;
-import com.google.common.base.Optional;
 
 import org.bukkit.Material;
 import org.bukkit.craftbukkit.CraftServer;
@@ -22,11 +21,11 @@ public class CraftFirework extends CraftEntity implements Firework {
     public CraftFirework(CraftServer server, EntityFireworks entity) {
         super(server, entity);
 
-        ItemStack item = getHandle().getDataWatcher().getItemStack(FIREWORK_ITEM_INDEX);
+        ItemStack item = getHandle().getDataWatcher().getItemStack(8);
 
         if (item == null) {
             item = new ItemStack(Items.FIREWORKS);
-            getHandle().getDataWatcher().set(EntityFireworks.FIREWORK_ITEM, Optional.of(item));
+            getHandle().getDataWatcher().watch(8, item);
         }
 
         this.item = CraftItemStack.asCraftMirror(item);
@@ -64,7 +63,7 @@ public class CraftFirework extends CraftEntity implements Firework {
         // Copied from EntityFireworks constructor, update firework lifetime/power
         getHandle().expectedLifespan = 10 * (1 + meta.getPower()) + random.nextInt(6) + random.nextInt(7);
 
-        getHandle().getDataWatcher().update(FIREWORK_ITEM_INDEX);
+        getHandle().getDataWatcher().update(8);
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index ce03ce2..ad07563 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -404,7 +404,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public void playSound(Location loc, String sound, float volume, float pitch) {
         if (loc == null || sound == null || getHandle().playerConnection == null) return;
 
-        PacketPlayOutNamedSoundEffect packet = new PacketPlayOutNamedSoundEffect(CraftSound.getSoundEffect(sound), SoundCategory.MASTER, loc.getX(), loc.getY(), loc.getZ(), volume, pitch);
+        double x = loc.getBlockX() + 0.5;
+        double y = loc.getBlockY() + 0.5;
+        double z = loc.getBlockZ() + 0.5;
+
+        PacketPlayOutNamedSoundEffect packet = new PacketPlayOutNamedSoundEffect(sound, x, y, z, volume, pitch);
         getHandle().playerConnection.sendPacket(packet);
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
index 2b21074..d60686d 100644
--- a/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
+++ b/src/main/java/org/bukkit/craftbukkit/inventory/CraftMetaBlockState.java
@@ -185,9 +185,6 @@ public class CraftMetaBlockState extends CraftMetaItem implements BlockStateMeta
 
     @Override
     public BlockState getBlockState() {
-		if (blockEntityTag != null && material == Material.SHIELD) {
-            blockEntityTag.setString("id", "Banner"); // Hack
-        }
         TileEntity te = blockEntityTag == null ? null : TileEntity.c(blockEntityTag);
 
         switch (material) {
-- 
2.8.2.windows.1

